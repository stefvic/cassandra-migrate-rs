name: Continuous Integration
on:
  pull_request:
  push:
    branches: [ main ]
jobs:
  test:
    name: Test project code
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        toolchain: [ stable, nightly ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2.6.0
        with:
          shared-key: test-${{ runner.os }}-cargo-${{ matrix.toolchain }}
      - name: Run test
        run: cargo test
  coverage:
    name: Coverage project code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2.6.0
        with:
          shared-key: coverage-${{ runner.os }}
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.20.1'
          args: '-- --test-threads 1'
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: cobertura.xml

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Setup Python
        uses: actions/setup-python@v4
      - name: Install pre-commit
        run: pip install --no-cache-dir pre-commit
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2.6.0
        with:
          shared-key: lint-${{ runner.os }}
      - name: Configure pre-commit cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: lint-${{ runner.os }}-pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}
      - name: Run pre-commit
        run: pre-commit run --all-files